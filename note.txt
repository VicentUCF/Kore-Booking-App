{
  _Object: {
    CoursePutController: class CoursePutController {
      constructor(commandBus) {
          this.commandBus = commandBus;
      }
      run(req, res) {
          return __awaiter(this, void 0, void 0, function* () {
              try {
                  const { id, courtId, date } = req.body;
                  const createCourseCommand = new CreateBookingCommand_1.CreateBookingCommand({ id, courtId, date });
                  yield this.commandBus.dispatch(createCourseCommand);
                  res.status(http_status_1.default.CREATED).send();
              }
              catch (error) {
                  res.status(http_status_1.default.INTERNAL_SERVER_ERROR).send();
              }
          });
      }
    },
  },
  _args: [
    {
      _id: "CourtsManager.Shared.domain.CommandBus",
      _nullable: false,
    },
  ],
  _calls: [
  ],
  _tags: [
  ],
  _properties: {
  },
  _lazy: false,
  _deprecated: undefined,
  _factory: null,
  _public: true,
  _synthetic: false,
  _decoratedService: undefined,
  _decorationPriority: undefined,
  _shared: undefined,
  _abstract: false,
  _appendArgs: [
  ],
  _parent: undefined,
}
